/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

int count(int n) {
	int result = 0;
	for (int i = 1; i * i <= n; i++) {
		if (n % i == 0) {
			result += 2;
			if (n / i == i)
				result--;
		}
	}
	return result;
}

static unsigned long SolveP12()
{
	//int counter = 2, n = 2;
	//unsigned long result = 1UL;
	//
	//while (!(counter > 500))
	//{
	//	result += n;
	//
	//	if (result > 5000000)
	//	{
	//		counter = 2; //minimum 1 and the numer itself
	//
	//		for (unsigned int i = 2; i < result; i++)
	//		{
	//			if (result % i == 0)
	//				counter++;
	//		}
	//	}
	//
	//	n++;
	//}
	//
	//return result;

	//Ermittel die wievielte triangle number es ist
	int result = 0;
	int cnt = 0;
	for (int i = 1; cnt <= 5; i++) {
		if (i % 2 == 0) cnt = count(i / 2) * count(i + 1);
		else cnt = count(i) * count((i + 1) / 2);
		//System.out.println("" + i + "\t" + cnt);
		if (cnt > 5)
			result = i;
	}

	return result * (result + 1) / 2; //formel zur berechnung der n-ten dreiecks zahl
}